#!/usr/bin/env bash
set -euo pipefail

# Exécuter seulement pour les shells interactifs
# [[ $- != *i* ]] && exit 0

# Préconditions
if ! command -v fastfetch >/dev/null 2>&1; then
  echo "fastfetch introuvable. Installe-le d'abord." >&2
  exit 1
fi

# Si pokemon-colorscripts est absent, fallback : fastfetch seul
if ! command -v pokemon-colorscripts >/dev/null 2>&1; then
  fastfetch
  exit 0
fi

# Choix de l'appel à pokemon-colorscripts (try --no-title sinon sans)
if pokemon-colorscripts --help 2>&1 | grep -q -- '--no-title'; then
  POKE_CMD=(pokemon-colorscripts -r --no-title)
else
  POKE_CMD=(pokemon-colorscripts -r)
fi

# Récupérer la sortie (ANSI colors)
POKE_OUTPUT="$("${POKE_CMD[@]}" 2>/dev/null || true)"

# Utiliser --data-raw si dispo, sinon fallback fichier temporaire + --file-raw
if fastfetch --help 2>&1 | grep -q -- '--data-raw'; then
  fastfetch --data-raw "$POKE_OUTPUT"
else
  tmpfile=$(mktemp)
  printf '%s\n' "$POKE_OUTPUT" > "$tmpfile"
  fastfetch --file-raw "$tmpfile"
  rm -f "$tmpfile"
fi
